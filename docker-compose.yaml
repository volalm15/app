version: "3.8"

networks:
  backend:
    name: backend
    driver: bridge
  frontend:
    name: frontend
    driver: bridge

volumes:
  postgres_data:
    driver: local

services:
  ui-app:
    image: ghcr.io/volalm15/ui-app:latest
    container_name: ui-app
    restart: unless-stopped
    networks:
      - frontend
    ports:
      - "4200:4200"
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
    depends_on:
      - fluent-bit
  # Service Applications
  config-service:
    image: ghcr.io/volalm15/config-service:latest
    container_name: config-service
    restart: unless-stopped
    env_file:
      - prod.env
    networks:
      - backend
    ports:
      - "8760:8760"
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
    depends_on:
      - fluent-bit
      - keycloak

  discovery-service:
    image: ghcr.io/volalm15/discovery-service:latest
    container_name: discovery-service
    restart: unless-stopped
    env_file:
      - prod.env
    networks:
      - backend
    ports:
      - "8888:8888"
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
    depends_on:
      - fluent-bit
      - keycloak

  edge-service:
    image: ghcr.io/volalm15/edge-service:latest
    container_name: edge-service
    restart: unless-stopped
    env_file:
      - prod.env
    networks:
      - backend
    ports:
      - "8761:8761"
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
    depends_on:
      - fluent-bit
      - keycloak

  data-service:
    image: ghcr.io/volalm15/data-service:latest
    restart: unless-stopped
    env_file:
      - prod.env
    networks:
      - backend
    ports:
      - "8000-8020:8762"
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
    depends_on:
      - fluent-bit
      - keycloak

  # Session Applications
  redis:
    image: redis
    restart: unless-stopped
    networks:
      - backend
    ports:
      - "6379:6379"

  # Security Applications
  postgres:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    env_file:
      - prod.env
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${KEYCLOAK_POSTGRES_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}

  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: keycloak
    hostname: keycloak
    restart: unless-stopped
    command: start --db=postgres
    env_file:
      - prod.env
    networks:
      - backend
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: ${KEYCLOAK_POSTGRES_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
      KC_DB_SCHEMA: public

      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true

      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}

    ports:
      - "8080:8080"
    depends_on:
      -   postgres

# Observability
  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - loki
      - prometheus
      - tempo
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./platform/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./platform/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./platform/grafana/grafana.ini:/etc/grafana/grafana.ini

  loki:
    image: grafana/loki
    container_name: loki
    depends_on:
      - fluent-bit
    ports:
      - "3100:3100"

  fluent-bit:
    image: grafana/fluent-bit-plugin-loki
    container_name: fluent-bit
    ports:
      - "24224:24224"
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    volumes:
      - ./platform/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./platform/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  tempo:
    image: grafana/tempo
    container_name: tempo
    command: -config.file /etc/tempo-config.yml
    ports:
      - "3110:3100"     # Tempo
      - "4317:4317"     # OTel
    volumes:
      - ./platform/tempo/tempo.yml:/etc/tempo-config.yml